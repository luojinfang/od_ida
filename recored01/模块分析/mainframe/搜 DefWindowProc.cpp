//IDA 勾选 find all occurences

Address         Function     Instruction                                                                          
-------         --------     -----------                                                                          
.text:61CE0417  sub_61CE03E7                 call    ds:DefWindowProcW                                            
.text:61CE0465  sub_61CE03E7                 call    ds:DefWindowProcW                                            
.text:61D2F8AE  sub_61D2F86C                 jmp     ds:DefWindowProcW                                            
.text:61D6D41C  sub_61D6D3FD                 jmp     ds:DefWindowProcW                                            
.idata:61DC5BF0              ; LRESULT __stdcall DefWindowProcW(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
.rdata:61E931D6                              db 'DefWindowProcW',0                                                



=========================================================================================================================================================================================
int __stdcall sub_61CE03E7(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
{
  LONG v4; // esi@1
  int result; // eax@2
  LRESULT (__stdcall *v6)(HWND, UINT, WPARAM, LPARAM); // esi@8
  HWND v7; // eax@13
  HWND v8; // edi@13
  HCURSOR v9; // eax@18
  HGDIOBJ v10; // eax@20
  bool v11; // zf@20
  struct tagTRACKMOUSEEVENT EventTrack; // [sp+8h] [bp-5Ch]@17
  HGDIOBJ v13; // [sp+18h] [bp-4Ch]@20
  HDC hDC; // [sp+1Ch] [bp-48h]@20
  struct tagPAINTSTRUCT Paint; // [sp+20h] [bp-44h]@20

  v4 = GetWindowLongW(hWnd, -21);
  if ( !v4 )
    return DefWindowProcW(hWnd, Msg, wParam, lParam);
  if ( Msg == 15 )
  {
    hDC = BeginPaint(hWnd, &Paint);
    GetWindowTextW(hWnd, &String, 260);
    v10 = SelectObject(hDC, *(HGDIOBJ *)(v4 + 32));
    v11 = *(_DWORD *)(v4 + 36) == 0;
    v13 = v10;
    if ( v11 )
      SetTextColor(hDC, *(_DWORD *)(v4 + 24));
    else
      SetTextColor(hDC, *(_DWORD *)(v4 + 20));
    SetBkColor(hDC, *(_DWORD *)(v4 + 16));
    SetBkMode(hDC, (*(_DWORD *)(v4 + 28) == 0) + 1);
    GetClientRect(hWnd, (LPRECT)&EventTrack);
    DrawTextW(hDC, &String, -1, (LPRECT)&EventTrack, 0);
    SelectObject(hDC, v13);
    EndPaint(hWnd, &Paint);
    return 1;
  }
  if ( Msg == 512 )
  {
    if ( !*(_DWORD *)(v4 + 36) )
    {
      EventTrack.cbSize = 16;
      EventTrack.hwndTrack = hWnd;
      EventTrack.dwFlags = 3;
      EventTrack.dwHoverTime = 1;
      *(_DWORD *)(v4 + 36) = TrackMouseEvent(&EventTrack);
      InvalidateRect(hWnd, 0, 0);
    }
    v9 = LoadCursorW(0, (LPCWSTR)0x7F89);
    SetCursor(v9);
    return 1;
  }
  if ( Msg == 513 )
  {
    v7 = GetParent(hWnd);
    v8 = v7;
    if ( v7 && IsWindow(v7) )
      SendMessageW(v8, 0x52Cu, *(_DWORD *)(v4 + 12), 0);
    return 1;
  }
  if ( Msg == 673 )
  {
    *(_DWORD *)(v4 + 36) = 1;
    return 1;
  }
  if ( Msg == 675 )
  {
    *(_DWORD *)(v4 + 36) = 0;
    InvalidateRect(hWnd, 0, 0);
    return 1;
  }
  v6 = *(LRESULT (__stdcall **)(HWND, UINT, WPARAM, LPARAM))(v4 + 8);
  if ( v6 )
    result = CallWindowProcW(v6, hWnd, Msg, wParam, lParam);
  else
    result = DefWindowProcW(hWnd, Msg, wParam, lParam);
  return result;
}

//LRESULT CallWindowProc(WNDPROC lpPrevWndFunc, HWND hWnd, UINT Msg, WPARAM wParam, LPARAM IParam) 
//	CallWindowProc 是将消息信息传送给指定的窗口过程的函数。使用函数 CallWindowsProc 可进行窗口子分类。
//	通常来说，同一类的所有窗口共享一个窗口过程。子类是一个窗口或者相同类的一套窗口，
//	在其消息被传送到该类的窗口过程之前，这些消息是由另一个窗口过程进行解释和处理的。
//参数 
//	lpPrevWndFunc: 指向前一个窗口过程的指针。如果该值是通过调用 GetWindowLong 函数，并将该函数中的 nIndex 参数设为 GWL_WNDPROC 或 DWL_DLGPROC 而得到的，
//		那么它实际上要么是窗口或者对话框的地址，要么就是代表该地址的句柄。
//	hWnd：指向接收消息的窗口过程的句柄。
//	Msg：指定消息类型。
//	wParam：指定其余的、消息特定的信息。该参数的内容与Msg参数值有关。
//	IParam：指定其余的、消息特定的信息。该参数的内容与Msg参数值有关。
//返回值：返回值指定了消息处理结果，它与发送的消息有关。


=========================================================================================================================================================================================
LRESULT __stdcall sub_61D2F86C(HWND hWnd, int Msg, UINT uIDEvent, int lParam)
{
  if ( GetWindowLongW(hWnd, -21) )
  {
    if ( Msg == 275 )
    {
      sub_61D2F25A(uIDEvent);
      return 0;
    }
    if ( Msg == 32816 )
    {
      sub_61D2F810(uIDEvent, lParam);
      return 0;
    }
  }
  return DefWindowProcW(hWnd, Msg, uIDEvent, lParam);
} 

=========================================================================================================================================================================================

void __cdecl sub_61D6D3FD(int a1, int a2, int a3, void *a4)
{
  if ( dword_61EAA874 )
    sub_61D6D34E(a1, a2, a3, a4);
  JUMPOUT(&DefWindowProcW);
}


=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================




=========================================================================================================================================================================================

